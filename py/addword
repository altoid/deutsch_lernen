#!/usr/bin/python

import common
import noun
import sys
import codecs
import dsn
import logging
from pprint import pprint

logging.basicConfig(level=logging.INFO)

def test_connection(db, c):
    try:
        c.execute("select 1")
    except Exception as e:
        # connection went away, retry
        db = dsn.getConnection()
        c = db.cursor(dictionary=True)

    return db, c
    
if __name__ == '__main__':
    utf8writer = codecs.getwriter('utf8')
    sys.stdout = utf8writer(sys.stdout)
    
    db = dsn.getConnection()
    c = db.cursor(dictionary=True)

    q = """
select max(id) + 1 id, 'exit' name
from pos
"""
    c.execute(q)
    results = c.fetchall()
    
    q = """
select id, name
from pos
"""
    c.execute(q)
    results = c.fetchall() + results
    results = sorted(results, key=lambda x: x['id'])

    menu = {x['id']:x['name'] for x in results}

    done = False
    
    while not done:
    
        for k, v in menu.iteritems():
            print k, v
    
        while True:
            choice = raw_input('---> ').strip()
    
            try:
                choice = int(choice)
            except ValueError:
                continue
    
            if choice in menu.keys():
                break
    
        if 'exit' == menu[choice]:
            break

#        try:
#            db, c = test_connection(db, c)
    
        if menu[choice] == 'Noun':
            done = noun.prompt_noun(db, c)
        else:
            done = common.prompt_word(db, c, menu[choice])
#        except Exception as e:
#            # connection went away, retry
#            db = dsn.getConnection()
#            c = db.cursor(dictionary=True)
#            print "########## database connection timed out, please reenter:"
#            if menu[choice] == 'Noun':
#                done = noun.prompt_noun(db, c)
#            else:
#                done = common.prompt_word(db, c, menu[choice])
    
    print 'auf wiedersehen'
        
    c.close()
    db.close()
