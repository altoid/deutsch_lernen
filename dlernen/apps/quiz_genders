#!/usr/bin/env python

from dlernen import config
import argparse
import json
import requests
from pprint import pprint


def get_quiz_data(chosen_words):
    url = "%s/api/quiz_data" % config.Config.DB_URL
    payload = {
        "quiz_key": "genders",
        "word_ids": chosen_words['word_ids']
    }
    r = requests.put(url, json=payload)
    quiz_data = json.loads(r.text)

    if not quiz_data:
        return None

    return quiz_data[0]


if __name__ == '__main__':
    parser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter,
                                     description="""
quiz_genders (no args)
all words

quiz_genders -l <wordlist_id> <wordlist_id> ...
all from a list

quiz_genders -n <x> -r
n randomly chosen

quiz_genders -n <x> -l <wordlist_id> <wordlist_id> ...
n randomly chosen from lists

quiz_genders -n <x>
n most recent
""")

    parser.add_argument('-l', '--listids',
                        nargs='+',
                        type=int,
                        help='id of word list to use')
    parser.add_argument('-n', '--nwords',
                        type=int,
                        default=10,
                        help='quiz the n most recently added words.  defaults to 10.')
    parser.add_argument('-r', '--recent',
                        action='store_true',
                        help='pick most recently added words and quiz them.')
    cl_args = parser.parse_args()

    url = "%s/api/words/article" % config.Config.DB_URL
    url = "%s?limit=%s&recent=%s" % (url, cl_args.nwords, cl_args.recent)
    if cl_args.listids:
        url = "%s&wordlist_id=%s" % (url, ','.join([str(x) for x in cl_args.listids]))

    pprint(url)

    r = requests.get(url)
    chosen_words = json.loads(r.text)

    done = False
    counter = 0
    while not done:
        row = get_quiz_data(chosen_words)

        if not row:
            print("es gibt keine Welten mehr zu erobern")
            break

        # pprint(row)
        counter += 1
        print("[%s]" % counter, end=' ')

        print(row['word'])
        prompt = "type correct article, q to quit:  --> "
        answer = input(prompt).strip().lower()

        if answer.startswith('q'):
            done = True
            break

        payload = {
            "quiz_id": row['quiz_id'],
            "word_id": row['word_id'],
            "attribute_id": row['article']['attribute_id'],
            "presentation_count": row['article']['presentation_count'],
            "correct_count": row['article']['correct_count']
        }
        if answer == row['article']['attrvalue']:
            print("ja")
            payload['correct_count'] += 1
        else:
            print("nein:  %s" % row['article']['attrvalue'])

        payload['presentation_count'] += 1

        url = "%s/api/quiz_data" % config.Config.DB_URL
        r = requests.post(url, data=payload)

    print('bis bald')
