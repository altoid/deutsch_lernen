#!/usr/bin/env python

from dlernen import common
from dlernen import noun
import sys
from dlernen import dsn
import logging
from pprint import pprint

logging.basicConfig(level=logging.INFO)


def test_connection(db, c):
    try:
        c.execute("select 1")
    except Exception as e:
        # connection went away, retry
        db = dsn.getConnection()
        c = db.cursor(dictionary=True, buffered=True)

    return db, c


if __name__ == '__main__':
    db = dsn.getConnection()
    c = db.cursor(dictionary=True, buffered=True)

    q = """
select max(id) + 1 id, 'exit' name
from pos
"""
    c.execute(q)
    results = c.fetchall()

    q = """
select id, name
from pos
"""
    c.execute(q)
    results = c.fetchall() + results
    results = sorted(results, key=lambda x: x['id'])

    menu = {x['id']: x['name'] for x in results}

    done = False

    while not done:

        for k, v in menu.items():
            print(k, v)

        while True:
            pos_id = input('---> ').strip()

            try:
                pos_id = int(pos_id)
            except ValueError:
                continue

            if pos_id in list(menu.keys()):
                break

        if 'exit' == menu[pos_id]:
            break

        try:
            db, c = test_connection(db, c)

            if menu[pos_id] == 'Noun':
                done = noun.prompt_noun(db, c)
            else:
                done = common.prompt_word(db, c, pos_id)
        except Exception as e:
            logging.exception(e)
            # connection went away, retry
            db = dsn.getConnection()
            c = db.cursor(dictionary=True, buffered=True)
            print("########## database connection timed out, please reenter:")
            if menu[pos_id] == 'Noun':
                done = noun.prompt_noun(db, c)
            else:
                done = common.prompt_word(db, c, menu[pos_id])

    print('auf wiedersehen')

    c.close()
    db.close()
